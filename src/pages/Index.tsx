import { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Card } from '@/components/ui/card';
import Icon from '@/components/ui/icon';

type Chapter = {
  id: number;
  title: string;
  location: string;
  character: string;
  gradient: string;
  description: string;
  dialogue: string[];
  completed: boolean;
};

const Index = () => {
  const [currentChapter, setCurrentChapter] = useState<number | null>(null);
  const [dialogueIndex, setDialogueIndex] = useState(0);
  const [gameStarted, setGameStarted] = useState(false);

  const chapters: Chapter[] = [
    {
      id: 1,
      title: '–ì–ª–∞–≤–∞ 1: –¢–∞—Ñ',
      location: '–õ–µ—Å Roblox',
      character: 'Taph –∏–∑ Forsaken',
      gradient: 'from-purple-900 via-purple-700 to-pink-500',
      description: 'Silent Salt –≤—Å—Ç—Ä–µ—á–∞–µ—Ç –¢–∞—Ñ–∞, –∫–æ—Ç–æ—Ä—ã–π –ø—ã—Ç–∞–µ—Ç—Å—è –Ω–∞—É—á–∏—Ç—å –µ–≥–æ –≥–æ–≤–æ—Ä–∏—Ç—å —á–µ—Ä–µ–∑ —ç–º–æ–¥–∑–∏.',
      dialogue: [
        'üëã',
        'ü´µ',
        'üóø',
        'ü§∑',
        'Silent Salt –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–Ω—è–ª –∏ –∏–¥—ë—Ç –¥–∞–ª—å—à–µ...'
      ],
      completed: false
    },
    {
      id: 2,
      title: '–ì–ª–∞–≤–∞ 2: –î–∂–µ–π—Å–æ–Ω',
      location: '–¢—ë–º–Ω—ã–π –ª–µ—Å',
      character: 'Jason Voorhees',
      gradient: 'from-gray-900 via-red-900 to-black',
      description: '–í –≥–ª—É–±–∏–Ω–µ –ª–µ—Å–∞ Silent Salt –Ω–∞—Ö–æ–¥–∏—Ç –î–∂–µ–π—Å–æ–Ω–∞ –í—É—Ä—Ö–∏–∑–∞.',
      dialogue: [
        'Ki... ki...',
        'Ma... ma...',
        'Ki ki ma...',
        'Silent Salt —Å–Ω–æ–≤–∞ –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–Ω—è–ª...'
      ],
      completed: false
    },
    {
      id: 3,
      title: '–ì–ª–∞–≤–∞ 3: –ì–∞—Å—Ç–µ—Ä',
      location: '–ß—ë—Ä–Ω—ã–π –º–∏—Ä',
      character: 'Gaster –∏–∑ Undertale',
      gradient: 'from-black via-gray-900 to-black',
      description: 'Silent Salt –ø–∞–¥–∞–µ—Ç –≤ —è–º—É –∏ –æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –≤ –ø–æ–ª–Ω–æ—Å—Ç—å—é —á—ë—Ä–Ω–æ–º –º–∏—Ä–µ.',
      dialogue: [
        '‚úãÔ∏é ‚ß´Ô∏é‚ôíÔ∏é‚ôìÔ∏é‚ñ†Ô∏éüôµ ‚çìÔ∏é‚ñ°Ô∏é‚óÜÔ∏éüïØÔ∏é‚ùíÔ∏é‚ôèÔ∏é ‚ôãÔ∏é',
        '‚óèÔ∏é‚ôìÔ∏é‚ß´Ô∏é‚ß´Ô∏é‚óèÔ∏é‚ôèÔ∏é ‚ñ°Ô∏é‚óÜÔ∏é‚ß´Ô∏é ‚ñ°Ô∏é‚ôêÔ∏é ‚ß´Ô∏é‚ñ°Ô∏é‚óÜÔ∏é‚ôçÔ∏é‚ôíÔ∏é',
        '‚¨•Ô∏é‚ôìÔ∏é‚ß´Ô∏é‚ôíÔ∏é ‚ùíÔ∏é‚ôèÔ∏é‚ôãÔ∏é‚óèÔ∏é‚ôìÔ∏é‚ß´Ô∏é‚çìÔ∏éüì™Ô∏é ‚ôåÔ∏é‚óÜÔ∏é‚ôéÔ∏é‚ôéÔ∏é‚çìÔ∏éüì¨Ô∏é',
        '–ì–∞—Å—Ç–µ—Ä –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç Silent Salt –æ–±—Ä–∞—Ç–Ω–æ...'
      ],
      completed: false
    },
    {
      id: 4,
      title: '–ì–ª–∞–≤–∞ 4: –ù–æ–∫—Å',
      location: 'Cookie Run Kingdom',
      character: '–ö–æ–Ω—å –ù–æ–∫—Å',
      gradient: 'from-purple-400 via-pink-300 to-cookie-pink',
      description: 'Silent Salt –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –¥–æ–º–æ–π –∏ –Ω–∞—Ö–æ–¥–∏—Ç —Å–≤–æ–µ–≥–æ –∫–æ–Ω—è –ù–æ–∫—Å.',
      dialogue: [
        '–ü—Ä–∏–≤–µ—Ç, –º–æ–π –¥—Ä—É–≥.',
        '–Ø –≤–∏–∂—É, —Ç—ã –∏—Å–∫–∞–ª —Ç–æ–≥–æ, –∫—Ç–æ –Ω–∞—É—á–∏—Ç —Ç–µ–±—è –≥–æ–≤–æ—Ä–∏—Ç—å.',
        '–¢—ã –ø—Ä–æ—à—ë–ª –¥–æ–ª–≥–∏–π –ø—É—Ç—å...',
        '–¢–µ–ø–µ—Ä—å –ø–æ—Å–ª—É—à–∞–π –º–µ–Ω—è –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ...',
        '–ü–æ–≤—Ç–æ—Ä—è–π –∑–∞ –º–Ω–æ–π: "–ü—Ä–∏-–≤–µ—Ç"',
        'Silent Salt: "–ü—Ä–∏... –≤–µ—Ç..."',
        'üéâ Silent Salt –Ω–∞—É—á–∏–ª—Å—è –≥–æ–≤–æ—Ä–∏—Ç—å!'
      ],
      completed: false
    }
  ];

  const [chapterList, setChapterList] = useState(chapters);

  const startGame = () => {
    setGameStarted(true);
  };

  const startChapter = (chapterId: number) => {
    setCurrentChapter(chapterId);
    setDialogueIndex(0);
  };

  const nextDialogue = () => {
    const chapter = chapterList.find(c => c.id === currentChapter);
    if (chapter && dialogueIndex < chapter.dialogue.length - 1) {
      setDialogueIndex(dialogueIndex + 1);
    } else {
      completeChapter();
    }
  };

  const completeChapter = () => {
    setChapterList(prev =>
      prev.map(c =>
        c.id === currentChapter ? { ...c, completed: true } : c
      )
    );
    setCurrentChapter(null);
    setDialogueIndex(0);
  };

  if (!gameStarted) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-purple-magic via-purple-900 to-deep-black flex items-center justify-center p-4">
        <Card className="max-w-2xl w-full bg-cookie-white/10 backdrop-blur-lg border-cookie-pink/30 p-8 md:p-12 animate-fade-in">
          <div className="text-center space-y-6">
            <div className="animate-float">
              <img 
                src="https://cdn.poehali.dev/files/e5ee1c7e-8e80-4fdf-ba85-d81ddec424dd.png" 
                alt="Silent Salt" 
                className="w-48 h-48 mx-auto object-contain"
              />
            </div>
            <h1 className="font-caveat text-6xl md:text-7xl text-cookie-pink stroke-deep-black">
              Silent Salt's Journey
            </h1>
            <p className="text-white text-xl font-montserrat">
              –û—Ç–ø—Ä–∞–≤–ª—è–π—Å—è –≤ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ —Å Silent Salt, –∫–æ—Ç–æ—Ä—ã–π –∏—â–µ—Ç —Ç–æ–≥–æ, –∫—Ç–æ –Ω–∞—É—á–∏—Ç –µ–≥–æ –≥–æ–≤–æ—Ä–∏—Ç—å
            </p>
            <Button 
              onClick={startGame}
              size="lg"
              className="bg-cookie-pink hover:bg-cookie-pink/90 text-white text-xl px-8 py-6 rounded-full shadow-lg hover:shadow-cookie-pink/50 transition-all duration-300 hover:scale-105"
            >
              –ù–∞—á–∞—Ç—å –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ
              <Icon name="Sparkles" className="ml-2" size={24} />
            </Button>
          </div>
        </Card>
      </div>
    );
  }

  if (currentChapter !== null) {
    const chapter = chapterList.find(c => c.id === currentChapter);
    if (!chapter) return null;

    return (
      <div className={`min-h-screen bg-gradient-to-br ${chapter.gradient} flex items-center justify-center p-4`}>
        <Card className="max-w-3xl w-full bg-black/40 backdrop-blur-lg border-white/20 p-6 md:p-10 animate-slide-in">
          <div className="space-y-6">
            <div className="text-center">
              <h2 className="font-caveat text-5xl text-cookie-pink mb-2">
                {chapter.title}
              </h2>
              <p className="text-white/80 font-montserrat text-lg">
                {chapter.location}
              </p>
            </div>

            <div className="bg-white/10 rounded-3xl p-8 min-h-[200px] flex items-center justify-center">
              <p className="text-white text-3xl md:text-4xl font-caveat text-center animate-fade-in">
                {chapter.dialogue[dialogueIndex]}
              </p>
            </div>

            <div className="flex justify-between items-center">
              <div className="text-white/60 font-montserrat text-sm">
                {dialogueIndex + 1} / {chapter.dialogue.length}
              </div>
              <Button
                onClick={nextDialogue}
                className="bg-white text-deep-black hover:bg-white/90 rounded-full px-6 py-3"
              >
                {dialogueIndex < chapter.dialogue.length - 1 ? '–î–∞–ª–µ–µ' : '–ó–∞–≤–µ—Ä—à–∏—Ç—å'}
                <Icon name="ChevronRight" className="ml-2" size={20} />
              </Button>
            </div>
          </div>
        </Card>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-purple-magic via-purple-900 to-deep-black p-4 md:p-8">
      <div className="max-w-6xl mx-auto">
        <div className="text-center mb-12 animate-fade-in">
          <h1 className="font-caveat text-6xl text-cookie-pink mb-4">
            Silent Salt's Journey
          </h1>
          <p className="text-white font-montserrat text-xl">
            –í—ã–±–µ—Ä–∏ –≥–ª–∞–≤—É –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏
          </p>
        </div>

        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
          {chapterList.map((chapter, index) => (
            <Card
              key={chapter.id}
              className={`bg-gradient-to-br ${chapter.gradient} border-white/20 p-6 cursor-pointer transition-all duration-300 hover:scale-105 hover:shadow-2xl ${
                chapter.completed ? 'opacity-60' : ''
              } ${index > 0 && !chapterList[index - 1].completed ? 'opacity-40 cursor-not-allowed' : ''}`}
              onClick={() => {
                if (index === 0 || chapterList[index - 1].completed) {
                  startChapter(chapter.id);
                }
              }}
            >
              <div className="space-y-4">
                <div className="flex items-start justify-between">
                  <div>
                    <h3 className="font-caveat text-3xl text-white mb-2">
                      {chapter.title}
                    </h3>
                    <p className="text-white/80 font-montserrat text-sm mb-1">
                      üìç {chapter.location}
                    </p>
                    <p className="text-white/70 font-montserrat text-sm">
                      üé≠ {chapter.character}
                    </p>
                  </div>
                  {chapter.completed && (
                    <div className="bg-green-500 rounded-full p-2">
                      <Icon name="Check" size={20} className="text-white" />
                    </div>
                  )}
                </div>
                <p className="text-white/90 font-montserrat text-sm">
                  {chapter.description}
                </p>
                {index > 0 && !chapterList[index - 1].completed && (
                  <div className="flex items-center gap-2 text-white/50 text-sm">
                    <Icon name="Lock" size={16} />
                    <span>–î–æ—Å—Ç—É–ø–Ω–æ –ø–æ—Å–ª–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –ø—Ä–µ–¥—ã–¥—É—â–µ–π –≥–ª–∞–≤—ã</span>
                  </div>
                )}
              </div>
            </Card>
          ))}
        </div>
      </div>
    </div>
  );
};

export default Index;
